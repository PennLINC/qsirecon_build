FROM nvidia/cuda:11.2.2-devel-ubuntu18.04 as base
ARG TAG_ANTS
FROM base as builder

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
                    software-properties-common \
                    build-essential \
                    apt-transport-https \
                    ca-certificates \
                    gnupg \
                    software-properties-common \
                    wget \
                    ninja-build \
                    git \
                    g++ \
                    zlib1g-dev \
                    bc && \
    add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
    apt-get update && \
    apt install -y --no-install-recommends \
        g++-9 gcc-9 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9

RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \
    | apt-key add - \
  && apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ bionic main' \
  && apt-get update \
  && apt-get -y install cmake=3.23.2-0kitware1ubuntu18.04.1 cmake-data=3.23.2-0kitware1ubuntu18.04.1

ARG ANTS_SHA=caa60eb4ad53d561f9ddd72b71a6baf2acac0078
RUN mkdir /tmp/ants \
    && cd /tmp \
    && git clone https://github.com/ANTsX/ANTs.git \
    && mv ANTs /tmp/ants/source \
    && cd /tmp/ants/source \
    && git checkout ${ANTS_SHA} \
    && mkdir -p /tmp/ants/build \
    && cd /tmp/ants/build \
    && mkdir -p /opt/ants \
    && git config --global url."https://".insteadOf git:// \
    && cmake \
        -GNinja \
        -DBUILD_TESTING=OFF \
        -DCMAKE_C_COMPILER=/usr/bin/gcc-9 \
        -DCMAKE_CXX_COMPILER=/usr/bin/g++-9 \
        -DBUILD_SHARED_LIBS=ON \
        -DSuperBuild_ANTS_C_OPTIMIZATION_FLAGS="-mtune=x86-64 -march=x86-64" \
        -DSuperBuild_ANTS_CXX_OPTIMIZATION_FLAGS="-mtune=x86-64 -march=x86-64" \
        -DCMAKE_INSTALL_PREFIX=/opt/ants \
        /tmp/ants/source \
    && cmake --build . --parallel 1 \
    && cd ANTS-build \
    && cmake --install . \
    && cd /opt/ants/bin \
    && rm \
        ANTSUseLandmarkImagesToGetAffineTransform \
        ANTSUseLandmarkImagesToGetBSplineDisplacementField \
        ClusterImageStatistics \
        ConvertInputImagePixelTypeToFloat \
        ConvertScalarImageToRGB \
        ConvertToJpg \
        CreateDTICohort \
        DeNrrd \
        ExtractSliceFromImage \
        FitBSplineToPoints \
        KellyKapowski \
        KellySlater \
        NonLocalSuperResolution \
        SuperResolution \
        SurfaceBasedSmoothing \
        TimeSCCAN \
        WarpImageMultiTransform \
        WarpTensorImageMultiTransform \
        WarpTimeSeriesImageMultiTransform \
        antsASLProcessing.sh \
        antsBOLDNetworkAnalysis.R \
        antsCorticalThickness.sh \
        antsIntermodalityIntrasubject.sh \
        antsLandmarkBasedTransformInitializer \
        antsLongitudinalCorticalThickness.sh \
        antsMotionCorr \
        antsMotionCorrDiffusionDirection \
        antsMotionCorrStats \
        antsNetworkAnalysis.R \
        antsNeuroimagingBattery \
        antsSliceRegularizedRegistration \
        antsUtilitiesTesting \
        sccan \
        simpleSynRegistration

FROM base
COPY --from=builder /opt/ants /opt/ants
COPY --from=builder /tmp/ants /tmp/ants

LABEL maintainer="ANTsX team: Forked by QSIRecon team" \
      description="ANTs is part of the ANTsX ecosystem (https://github.com/ANTsX). \
ANTs Citation: https://pubmed.ncbi.nlm.nih.gov/24879923"

ENV ANTSPATH="/opt/ants/bin" \
    PATH="/opt/ants/bin:$PATH" \
    LD_LIBRARY_PATH="/opt/ants/lib:$LD_LIBRARY_PATH"
RUN apt-get update \
    && apt install -y --no-install-recommends zlib1g-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*

WORKDIR /data

CMD ["/bin/bash"]
